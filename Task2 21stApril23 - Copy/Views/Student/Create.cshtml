@model  Task2_21stApril23.Model.Student



@{
    ViewBag.Title = "Create";
}

<h2>Create</h2>


@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    
<div class="form-horizontal">
    <h4>Student</h4>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    <div class="form-group">
        @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
        </div>
    </div>

    @*<div class="form-group">
            <lable>Gender : </lable>
            <div class="form-group">
                @Html.DropDownListFor(model=> model.GenderId, ViewBag.genderList as SelectList, "Select gender")
            </div>
        </div>*@

    <div class="form-group">
        <lable>Gender : </lable>
        <div class="form-group">
            @Html.DropDownListFor(model => model.GenderId, (IEnumerable<SelectListItem>)ViewBag.genderList, "Select gender")
        </div>
    </div>



    <div class="form-group">
        <lable>Standard : </lable>
        <div class="form-group">
            @*List<StandardTable> listOfStandard = dbObject.StandardTables.ToList();*@
            @Html.DropDownListFor(model => model.StandardId, (IEnumerable<SelectListItem>)ViewBag.listOfStandard, "Select Standard")
        </div>
    </div>


    @* <div class="form-group">
            <lable>Gender : </lable>
            <div class="form-group">
                @Html.DropDownList("GenderId", (List<SelectListItem>)ViewBag.genderList, "Select gender")
            </div>
        </div>
    *@



    @* For Standard Dropdown : *@
    @*<div class="form-group">
            <lable>Standard : </lable>
            <div class="form-group">
                @Html.DropDownListFor(model => model.StandardId, ViewBag.listOfStandard as SelectList, "Select ")
            </div>
        </div>*@


    @* <div class="form-group">
            <lable>Standard : </lable>
            <div class="form-group">
                @Html.DropDownListFor(model => model.StandardId, ViewBag.listOfStandard1 as SelectList, "Select ")
            </div>  
        </div>*@

    <div class="form-group">
        @Html.LabelFor(model => model.Division, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Division, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Division, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.City, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.City, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.City, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Contact, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Contact, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Contact, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Create" class="btn btn-default" />
        </div>
    </div>
</div>
    }

    <div>
        @Html.ActionLink("Back to List", "Index")
    </div>

    @section Scripts {
        @Scripts.Render("~/bundles/jqueryval")
    }
